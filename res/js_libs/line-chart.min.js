var LineChart = {
    defaultConfig: {
        containerClass: "line-chart",
        w: 600,
        h: 400,
        margin: {top: 10, right: 30, bottom: 30, left: 60}
    },
    chart: function () {
        var a = Object.create(LineChart.defaultConfig);
        function chart(selection) {
            selection.each(function (data) {
                // Defensive: flatten data if needed
                if (Array.isArray(data) && Array.isArray(data[0])) data = data[0];

                var margin = a.margin,
                    width = a.w - margin.left - margin.right,
                    height = a.h - margin.top - margin.bottom;

                // Remove old content
                d3.select(this).selectAll("*").remove();

                // Append SVG group
                var svg = d3.select(this)
                    .attr("width", a.w)
                    .attr("height", a.h)
                    .append("g")
                    .attr("transform", `translate(${margin.left},${margin.top})`);

                // X axis (numerical)
                var x = d3.scaleLinear()
                    .domain(d3.extent(data, function(d) { return d.x; }))
                    .range([0, width]);
                svg.append("g")
                    .attr("transform", `translate(0,${height})`)
                    .call(d3.axisBottom(x));

                // Y axis (numerical)
                var y = d3.scaleLinear()
                    .domain([0, d3.max(data, function(d) { return +d.y; })])
                    .range([height, 0]);
                svg.append("g")
                    .call(d3.axisLeft(y));

                // Draw line segments, each colored by the category color of the starting point
                for (let i = 0; i < data.length - 1; ++i) {
                    let p0 = data[i];
                    let p1 = data[i + 1];
                    let color = (p0.category && Array.isArray(p0.category)) ? p0.category[0] : "#000";
                    svg.append("line")
                        .attr("x1", x(p0.x))
                        .attr("y1", y(p0.y))
                        .attr("x2", x(p1.x))
                        .attr("y2", y(p1.y))
                        .attr("stroke", color)
                        .attr("stroke-width", 2)
                        .attr("fill", "none");
                }
            });
        }
        chart.config = function (b) {
            if (!arguments.length) return a;
            Object.entries(b || {}).forEach(function (kv) { a[kv[0]] = kv[1]; });
            return chart;
        };
        return chart;
    },
    draw: function (a, b, c) {
        var d = LineChart.chart().config(c),
            e = d.config();
        d3.select(a).select("svg").remove();
        d3.select(a)
            .append("svg")
            .attr("width", e.w)
            .attr("height", e.h)
            .datum(b)
            .call(d);
    }
};